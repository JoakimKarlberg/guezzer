// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using guezzer.Data;

namespace guezzer.Data.Migrations
{
    [DbContext(typeof(GuezzerDbContext))]
    partial class GuezzerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("guezzer.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new { Id = new Guid("b886f08a-78f1-4bf8-8c47-6ad767c79bfd"), Type = "Music" },
                        new { Id = new Guid("06e99bee-9eb0-4987-a13f-b0fac67e854a"), Type = "Funny" },
                        new { Id = new Guid("0e832c20-d85a-422d-939b-a11632e099b6"), Type = "Random" }
                    );
                });

            modelBuilder.Entity("guezzer.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("TimesPlayed");

                    b.HasKey("Id");

                    b.ToTable("Players");

                    b.HasData(
                        new { Id = new Guid("87056949-fc5a-4388-b633-3681e5047e8a"), Name = "BestPlayer", TimesPlayed = 0 },
                        new { Id = new Guid("a8cb9c9c-7cac-4297-b8af-2ccf6c0d6247"), Name = "WorstPlayer", TimesPlayed = 0 },
                        new { Id = new Guid("88ca7ac5-107c-4490-8f07-92ad9cac465c"), Name = "OkayPlayer", TimesPlayed = 0 },
                        new { Id = new Guid("7e60c47e-9953-4882-8d6c-163775587661"), Name = "Jonas", TimesPlayed = 0 },
                        new { Id = new Guid("5e6bc080-9ea7-4e3c-aca0-4d9f69f30ecf"), Name = "Jenny", TimesPlayed = 0 }
                    );
                });

            modelBuilder.Entity("guezzer.Entities.Result", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CategoryId");

                    b.Property<Guid>("PlayerId");

                    b.Property<int>("Score");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("guezzer.Entities.Result", b =>
                {
                    b.HasOne("guezzer.Entities.Category", "Category")
                        .WithMany("Results")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("guezzer.Entities.Player", "Player")
                        .WithMany("Results")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
